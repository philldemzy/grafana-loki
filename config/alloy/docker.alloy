discovery.docker "linux" {
  host = "unix:///var/run/docker.sock"
}

discovery.relabel "container_logs" {
  targets = discovery.docker.linux.targets
  rule {
    source_labels = ["__meta_docker_container_name"]
    target_label  = "container_name"
  }
  rule {
    source_labels = ["__meta_docker_container_id"]
    target_label  = "container_id"
  }
  rule {
    source_labels = ["__meta_docker_network_ip"]
    target_label  = "container_network_ip"
  }
  rule {
    source_labels = ["__meta_docker_container_network_mode"]
    target_label  = "container_network_mode"
  }
}


loki.source.docker "docker" {
  host       = "unix:///var/run/docker.sock"
  targets    = discovery.relabel.container_logs.output
  forward_to = [loki.write.docker.receiver]
}

loki.write "docker" {
  endpoint {
    url = "http://localhost:3100/loki/api/v1/push"
  }
}



/*Each target includes the following labels:
__meta_docker_container_id: ID of the container.
__meta_docker_container_name: Name of the container.
__meta_docker_container_network_mode: Network mode of the container.
__meta_docker_container_label_<labelname>: Each label from the container.
__meta_docker_network_id: ID of the Docker network the container is in.
__meta_docker_network_name: Name of the Docker network the container is in.
__meta_docker_network_ingress: Set to true if the Docker network is an ingress network.
__meta_docker_network_internal: Set to true if the Docker network is an internal network.
__meta_docker_network_label_<labelname>: Each label from the network the container is in.
__meta_docker_network_scope: The scope of the network the container is in.
__meta_docker_network_ip: The IP of the container in the network.
__meta_docker_port_private: The private port on the container.
__meta_docker_port_public: The publicly exposed port from the container, if a port mapping exists.
__meta_docker_port_public_ip: The public IP of the container, if a port mapping exists.*/
